name: immortalwrt-N1

on:
  schedule:
    - cron: '0 0 1 * *' # 在中国时间每月1号早上8点运行 (UTC时间是每月1号早上0点)

  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  targets_targets: immortalwrt-N1
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-24.10

jobs:

  build:
    runs-on: ubuntu-latest

    steps:

    - name: Maximize build space
      uses: thiagokokada/free-disk-space@main
      with:
        # this might remove tools that are actually needed, but is enabled by
        # default
        tool-cache: true
        # possible dangerous options since they delete whole directories that
        # are generally for third-party software or cache like /usr/local,
        # /opt, /var/cache, only use them if you know what you're doing
        usrmisc: false
        usrlocal: false
        opt: false
        varcache: false
        # this will run `du -h /* 2>/dev/null | sort -hr | head -n <N>` to show
        # the top N directories by size, it is mostly used by development/debug
        # and should not be used generally since it takes a while to calculate
        debug: false

    - name: Checkout
      uses: actions/checkout@v3

    - name: Install Compilation Dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
          sudo timedatectl set-timezone Asia/Shanghai
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.org/init_build_environment.sh)'
          df -h

    - name: Clone source code
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        git clone https://Saxon-Sun:${{ secrets.pw }}@github.com/Saxon-Sun/Route-config-Files.git

    - name: Update feeds
      run: |
        cd openwrt
        rm -rf package/luci-app-amlogic
        git clone https://github.com/ophub/luci-app-amlogic.git package/luci-app-amlogic
        mv Route-config-Files/"$targets_targets"/* ./
        chmod +x Route-config-Files/diy/*
        mv Route-config-Files/diy/* ./
        ./Add-Source.sh
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        cd openwrt
        cp -r Route-config-Files/public/* files/etc/
        ./diy-n1.sh
        mv Route-config-Files/"$targets_targets"/.config ./
        make defconfig

    - name: SSH connection to Actions
      uses: Saxon-Sun/ssh2actions@main
      if: github.event.inputs.ssh == 'true'
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Download package
      id: package
      run: |
        cd openwrt
        make download -j16
        
    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        make -j$(nproc) || make -j1 V=s
        echo "======================="
        echo "Space usage:"
        echo "======================="
        df -h
        echo "======================="
        #make -j1 V=s
        du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
        du -h --max-depth=1 ./build_dir
        du -h --max-depth=1 ./bin
        ls bin/targets/*/*
        rm -rf build_dir
        rm -rf $(find ./bin/targets/ -type d -name "packages")
        df -h
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Package Armvirt as OpenWrt
      if: steps.compile.outputs.status == 'success' && !cancelled()
      uses: unifreq/openwrt_packit@master
      env:
        OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*.tar.gz
        PACKAGE_SOC: s905d
        WHOAMI: Saxon

    - name: Prepare artifact
      if: env.PACKAGED_STATUS == 'success' && !cancelled()
      run: |
        cd openwrt/
        mkdir -p ./artifact/firmware
        mkdir -p ./artifact/package
        ls /opt/openwrt_packit/output
        mv /opt/openwrt_packit/output/* ./artifact/firmware/
        rm -rf $(find ./artifact/firmware/ -type f -name "*rootfs*")
        ./upload.sh $targets_targets

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        token: ${{ secrets.pw }}
        repository: ${{ github.repository }}
        retain_days: 1
        keep_minimum_runs: 2
