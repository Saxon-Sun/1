name: Phicomm-N1

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master

jobs:

  build:
    runs-on: ubuntu-latest

    steps:

    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 5120
        swap-size-mb: 4096
        remove-dotnet: 'true'

    # - name: Space cleanup
      # env:
        # DEBIAN_FRONTEND: noninteractive
      # run: |
        # docker rmi `docker images -q`
        # sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
        # sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true

    - name: Checkout
      uses: actions/checkout@v3

    - name: Install Compilation Dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt-get update
          sudo -E apt-get -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          df -h

    - name: Clone source code
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt

    - name: Update feeds
      run: |
        cd openwrt
        git clone https://Saxon-Sun:${{ secrets.pw }}@github.com/Saxon-Sun/Route-config-Files.git
        mv `pwd`/Route-config-Files/Phicomm-N1/* `pwd`/
        cp -r `pwd`/Route-config-Files/public/* `pwd`/files/etc/config/
        chmod +x feed.sh
        ./feed.sh
        cat ./feeds.conf.default
        ./scripts/feeds update -a

    - name: Install feeds
      run: |
        cd openwrt
        ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        cd openwrt
        sudo -E apt-get -qq install subversion
        chmod +x diy.sh
        ./diy.sh
        mv `pwd`/Route-config-Files/packages/* `pwd`/package/lean/
        mv `pwd`/Route-config-Files/Phicomm-N1/.config `pwd`/
        make defconfig

    - name: SSH connection to Actions
      uses: Saxon-Sun/ssh2actions@main
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Download package
      id: package
      run: |
        cd openwrt
        make download -j8
        find dl -size -1024c -exec rm -f {} \;
        
    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        make -j$(nproc) 2>&1|tee ./xxx.log|| make -j1 V=s 2>&1|tee ./xxx.log
        du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
        du -h --max-depth=1 ./build_dir
        du -h --max-depth=1 ./bin
        cd bin/targets/*/*
        ls -al
        rm -rf packages openwrt-armvirt-64-default.manifest openwrt-armvirt-64-Image sha256sums version.buildinfo feeds.buildinfo openwrt-armvirt-64-rootfs-ext4.img 
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Package Armvirt as OpenWrt
      uses: unifreq/openwrt_packit@master
      env:
        OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*.tar.gz
        PACKAGE_SOC: s905d
        KERNEL_VERSION_NAME: 6.1.9
        WHOAMI: Saxon

    - name: Prepare artifact
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        cd openwrt/
        chmod +x `pwd`/upload.sh
        `pwd`/upload.sh
        mkdir -p ./artifact/firmware
        mv Phicomm-N1.zip ./artifact/firmware/

    - name: Upload firmware
      uses: actions/upload-artifact@v3
      with:
        name: OpenWrt_firmware
        path: ./openwrt/artifact/firmware
        
    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 2
        keep_minimum_runs: 2
