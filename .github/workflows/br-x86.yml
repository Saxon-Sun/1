#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
#=================================================

name: br-x86

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master

jobs:
  build:
    runs-on: ubuntu-latest
    
    if: github.event.repository.owner.id == github.event.sender.id

    steps:

    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 6144
        swap-size-mb: 4096
        remove-dotnet: 'true'

    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: master 

    - name: Install Compilation Dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
          sudo -E apt-get update
          sudo -E apt-get -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev

    - name: Clone source code
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        
    - name: Update feeds
      run: |
        cd openwrt
        echo "src-git helloworld https://github.com/fw876/helloworld" >> ./feeds.conf.default
        echo "src-git cdnspeedtest https://github.com/immortalwrt-collections/openwrt-cdnspeedtest.git" >> "feeds.conf.default"
        #sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
        #sed -i 's#coolsnowwolf/luci#Saxon-Sun/luci#g' ./feeds.conf.default
        #sed -i 's#coolsnowwolf/packages#Saxon-Sun/packages-2#g' ./feeds.conf.default
        #sed -i 's#fw876/helloworld#Mattraks/helloworld.git;develop#g' ./feeds.conf.default
        cat ./feeds.conf.default
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        cd openwrt
        sudo -E apt-get -qq install subversion
        #svn checkout  https://github.com/Saxon-Sun/package/trunk/luci-app-pptp-server ./package/openwrt-packages/luci-app-pptp-server/
        #svn checkout  https://github.com/lisaac/luci-app-dockerman/trunk/applications/luci-app-dockerman ./package/openwrt-packages/luci-app-dockerman/
        git clone https://Saxon-Sun:${{ secrets.pw }}@github.com/Saxon-Sun/Route-config-Files.git
        mv `pwd`/Route-config-Files/br-x86/* `pwd`/
        chmod +x diy.sh
        ./diy.sh
        mv `pwd`/Route-config-Files/br-x86/.config `pwd`/
        make defconfig

    - name: SSH connection to Actions
      uses: Saxon-Sun/ssh2actions@main
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Download package
      id: package
      run: |
        cd openwrt
        make download -j8
        find dl -size -1024c -exec rm -f {} \;
        
    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        make -j$(nproc) 2>&1|tee ./xxx.log|| make -j1 V=s 2>&1|tee ./xxx.log
        echo "======================="
        echo "Space usage:"
        echo "======================="
        df -h
        echo "======================="
        du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
        du -h --max-depth=1 ./build_dir
        du -h --max-depth=1 ./bin
        rm -rf $(find ./bin/targets/ -type d -name "packages")
        rm -rf $(find ./bin/targets/ -type f -name "*rootfs*")
        echo "status=success" >> $GITHUB_OUTPUT
        
    - name: Upload firmware
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        cd openwrt/
        chmod +x `pwd`/upload.sh
        `pwd`/upload.sh

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 2
        keep_minimum_runs: 2
